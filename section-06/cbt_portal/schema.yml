openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /accounts/admin/:
    get:
      operationId: accounts_admin_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
          description: ''
  /accounts/admin/{id}/:
    get:
      operationId: accounts_admin_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: ''
    put:
      operationId: accounts_admin_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Admin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: ''
    patch:
      operationId: accounts_admin_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdmin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdmin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdmin'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: ''
    delete:
      operationId: accounts_admin_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /accounts/api/token/:
    post:
      operationId: accounts_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/api/token/refresh/:
    post:
      operationId: accounts_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/login/:
    post:
      operationId: accounts_login_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/logout/:
    post:
      operationId: accounts_logout_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/signup/:
    post:
      operationId: accounts_signup_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/students/:
    get:
      operationId: accounts_students_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
          description: ''
  /accounts/students/{id}/:
    get:
      operationId: accounts_students_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    put:
      operationId: accounts_students_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: accounts_students_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: accounts_students_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /courses/{id}:
    get:
      operationId: courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /courses/all:
    get:
      operationId: courses_all_retrieve
      tags:
      - courses
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: courses_all_create
      tags:
      - courses
      security:
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /courses/exams/{title}:
    get:
      operationId: courses_exams_retrieve
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: A unique value identifying this exam.
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    put:
      operationId: courses_exams_update
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: A unique value identifying this exam.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exam'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    patch:
      operationId: courses_exams_partial_update
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: A unique value identifying this exam.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExam'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
    delete:
      operationId: courses_exams_destroy
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: A unique value identifying this exam.
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /courses/exams/all:
    get:
      operationId: courses_exams_all_list
      tags:
      - courses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exam'
          description: ''
    post:
      operationId: courses_exams_all_create
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exam'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exam'
          description: ''
  /questions/{id}/:
    get:
      operationId: questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /questions/all/:
    get:
      operationId: questions_all_retrieve
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: questions_all_create
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /questions/choices/{id}/:
    get:
      operationId: questions_choices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: questions_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: questions_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /questions/choices/all/{id}:
    get:
      operationId: questions_choices_all_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: questions_choices_all_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /results/:
    get:
      operationId: results_list
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
          description: ''
    post:
      operationId: results_create
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Result'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Result'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
  /results/{id}/:
    get:
      operationId: results_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this result.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
    put:
      operationId: results_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this result.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Result'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Result'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
    patch:
      operationId: results_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this result.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResult'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
    delete:
      operationId: results_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this result.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /results/exam-attempt/:
    get:
      operationId: results_exam_attempt_list
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamAttempt'
          description: ''
    post:
      operationId: results_exam_attempt_create
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttempt'
          description: ''
  /results/exam-attempt/{id}/:
    get:
      operationId: results_exam_attempt_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam attempt.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttempt'
          description: ''
    put:
      operationId: results_exam_attempt_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam attempt.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExamAttempt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttempt'
          description: ''
    patch:
      operationId: results_exam_attempt_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam attempt.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExamAttempt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExamAttempt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExamAttempt'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamAttempt'
          description: ''
    delete:
      operationId: results_exam_attempt_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exam attempt.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /results/student-answer/:
    get:
      operationId: results_student_answer_list
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAnswer'
          description: ''
    post:
      operationId: results_student_answer_create
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnswer'
          description: ''
  /results/student-answer/{id}/:
    get:
      operationId: results_student_answer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student answer.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnswer'
          description: ''
    put:
      operationId: results_student_answer_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student answer.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentAnswer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnswer'
          description: ''
    patch:
      operationId: results_student_answer_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student answer.
        required: true
      tags:
      - results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentAnswer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAnswer'
          description: ''
    delete:
      operationId: results_student_answer_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student answer.
        required: true
      tags:
      - results
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Admin:
      type: object
      properties:
        user:
          type: integer
        department:
          type: string
          maxLength: 100
      required:
      - department
      - user
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 20
        description:
          type: string
          maxLength: 500
        exam:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
      required:
      - code
      - description
      - exam
      - id
      - name
    Exam:
      type: object
      properties:
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_id:
          type: integer
        title:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        total_marks:
          type: integer
        date:
          type: string
          format: date-time
        duration_minutes:
          type: integer
      required:
      - course
      - course_id
      - date
      - duration_minutes
      - title
      - total_marks
    ExamAttempt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attempt_at:
          type: string
          format: date-time
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        student:
          type: integer
        exam:
          type: string
      required:
      - attempt_at
      - exam
      - id
      - student
    PatchedAdmin:
      type: object
      properties:
        user:
          type: integer
        department:
          type: string
          maxLength: 100
    PatchedExam:
      type: object
      properties:
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
        course_id:
          type: integer
        title:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        total_marks:
          type: integer
        date:
          type: string
          format: date-time
        duration_minutes:
          type: integer
    PatchedExamAttempt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attempt_at:
          type: string
          format: date-time
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        student:
          type: integer
        exam:
          type: string
    PatchedResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        student:
          type: integer
        exam:
          type: string
    PatchedStudent:
      type: object
      properties:
        user:
          type: integer
        student_id:
          type: string
          maxLength: 100
    PatchedStudentAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        question:
          type: integer
        selected_choice:
          type: integer
        attempt:
          type: integer
    Result:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        student:
          type: integer
        exam:
          type: string
      required:
      - exam
      - id
      - student
    Student:
      type: object
      properties:
        user:
          type: integer
        student_id:
          type: string
          maxLength: 100
      required:
      - student_id
      - user
    StudentAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        question:
          type: integer
        selected_choice:
          type: integer
        attempt:
          type: integer
      required:
      - attempt
      - id
      - question
      - selected_choice
      - student
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
